version: '3.8'

services:

  frontend:
    image: ghcr.io/plonegovbr/ploneorgbr-frontend:${STACK_PARAM:-latest}
    environment:
      RAZZLE_INTERNAL_API_PATH: http://plone-org-br_backend:8080/Plone
    depends_on:
      - backend
    networks:
      - public
      - nw-plone-org-br
    deploy:
      replicas: 2
      placement:
        constraints:
          - node.labels.type == app
      update_config:
        parallelism: 1
        delay: 5s
        order: start-first
      labels:
        - traefik.enable=true
        - traefik.docker.network=public
        - traefik.constraint-label=public
        # SERVICE
        - traefik.http.services.svc-ploneorgbr-live-frontend.loadbalancer.server.port=3000
        # Router: Main
        - traefik.http.routers.rt-ploneorgbr-live-frontend.rule=Host(`plone.org.br`)
        - traefik.http.routers.rt-ploneorgbr-live-frontend.entrypoints=https
        - traefik.http.routers.rt-ploneorgbr-live-frontend.tls=true
        - traefik.http.routers.rt-ploneorgbr-live-frontend.tls.certresolver=le
        - traefik.http.routers.rt-ploneorgbr-live-frontend.service=svc-ploneorgbr-live-frontend
        - traefik.http.routers.rt-ploneorgbr-live-frontend.middlewares=gzip

  backend:
    image: ghcr.io/plonegovbr/ploneorgbr-backend:${STACK_PARAM:-latest}
    environment:
      RELSTORAGE_DSN: "dbname='${DB_NAME:-plone}' user='${DB_USER:-plone}' host='${DB_HOST:-db}' password='${DB_PASSWORD:-plone}'"
      MASTODON_APPS: "${MASTODON_APPS:-[]}"
      BLUESKY_APPS: "${BLUESKY_APPS:-[]}"
    networks:
      - public
      - nw-plone-org-br
    deploy:
      replicas: 2
      placement:
        constraints:
          - node.labels.type == app
      update_config:
        parallelism: 1
        delay: 5s
        order: start-first
      labels:
        - traefik.enable=true
        - traefik.docker.network=public
        - traefik.constraint-label=public
        # Service
        - traefik.http.services.svc-ploneorgbr-live-backend.loadbalancer.server.port=8080
        # Middlewares
        ## /++api++
        - "traefik.http.middlewares.mw-ploneorgbr-live-vhm-api.replacepathregex.regex=^/\\+\\+api\\+\\+($$|/.*)"
        - "traefik.http.middlewares.mw-ploneorgbr-live-vhm-api.replacepathregex.replacement=/VirtualHostBase/https/plone.org.br/Plone/++api++/VirtualHostRoot/$$1"
        ## /ClassicUI
        - "traefik.http.middlewares.mw-ploneorgbr-live-vhm-classicui.replacepathregex.regex=^/ClassicUI($$|/.*)"
        - "traefik.http.middlewares.mw-ploneorgbr-live-vhm-classicui.replacepathregex.replacement=/VirtualHostBase/https/plone.org.br/Plone/VirtualHostRoot/_vh_ClassicUI/$$1"
        ## BasicAuth
        - traefik.http.middlewares.mw-ploneorgbr-live-backend-auth.basicauth.users=${BASIC_AUTH}

        # Router
        ## /++api++
        - traefik.http.routers.rt-ploneorgbr-live-backend.rule=Host(`plone.org.br`) && PathPrefix(`/++api++`)
        - traefik.http.routers.rt-ploneorgbr-live-backend.entrypoints=https
        - traefik.http.routers.rt-ploneorgbr-live-backend.tls=true
        - traefik.http.routers.rt-ploneorgbr-live-backend.service=svc-ploneorgbr-live-backend
        - traefik.http.routers.rt-ploneorgbr-live-backend.middlewares=gzip,mw-ploneorgbr-live-vhm-api
        ## /ClassicUI
        - traefik.http.routers.rt-ploneorgbr-live-classicui.rule=Host(`plone.org.br`) && PathPrefix(`/ClassicUI`)
        - traefik.http.routers.rt-ploneorgbr-live-classicui.entrypoints=https
        - traefik.http.routers.rt-ploneorgbr-live-classicui.tls=true
        - traefik.http.routers.rt-ploneorgbr-live-classicui.service=svc-ploneorgbr-live-backend
        - traefik.http.routers.rt-ploneorgbr-live-classicui.middlewares=gzip,mw-ploneorgbr-live-backend-auth,mw-ploneorgbr-live-vhm-classicui

networks:
  public:
    external: true
    driver: overlay
  nw-plone-org-br:
    driver: overlay
